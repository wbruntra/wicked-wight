{"version":3,"sources":["utils.js","actions/index.js","actions/types.js","components/modals/PassphraseCopyModal.js","components/modals/SettingsModal.js","components/App.js","serviceWorker.js","reducers/modalReducers.js","reducers/phraseReducers.js","reducers/wordListReducer.js","data/got-long-words.js","reducers/index.js","index.js","components/modals/clippy.svg"],"names":["upperFirst","string","charAt","toUpperCase","slice","range","n","Object","toConsumableArray","Array","keys","generatePhrase","wordList","map","i","arr","Math","floor","random","length","join","generatePhrases","count","phraseLength","showModal","name","type","modal","hideModal","updatePhrases","phrases","payload","updateCount","updateLength","len","updateSelectedPhrase","phrase","updateSelectedWordlist","key","fetchWordlist","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","words","wrap","_context","prev","next","axios","get","concat","then","res","data","sent","abrupt","t0","Promise","reject","message","stop","_x","apply","this","arguments","tooltip","react_default","createElement","Tooltip","id","PassphraseCopyModal","props","_this","classCallCheck","_super","call","handleCapNum","_this$props","selectedPhrase","setTimeout","refs","overlay","show","hide","handleRemoveSpaces","_this$props2","split","handleUpdate","e","target","value","copyButtonRef","setCopyButtonRef","element","_this2","Modal","modals","box","onHide","onShow","container","aria-labelledby","Header","closeButton","Title","Body","Row","Col","xs","className","onChange","lib","text","OverlayTrigger","ref","placement","trigger","onClick","Button","alt","src","ClippySVG","style","height","Footer","Component","connect","state","actions","SettingsModal","changeWordList","catch","err","console","log","handleHide","_this$props$phrases","phraseCount","selectedList","editPhrase","handleRadio","settings","val","Number","aria-describedby","copyToClipboard","str","el","document","body","appendChild","select","execCommand","removeChild","templates","got","title","pw1","pw2","pw3","potter","App","handleClick","noSpaces","replace","handleModalShow","setState","prevState","modalVisibility","objectSpread","defineProperty","handleModalHide","refreshPhrases","phraseList","template","Grid","smOffset","sm","Panel","ListGroup","ListGroupItem","href","modals_PassphraseCopyModal","modals_SettingsModal","Boolean","window","location","hostname","match","initialState","reducers","undefined","action","store","createStore","combineReducers","rootReducer","composeWithDevTools","applyMiddleware","reduxThunk","ReactDOM","render","es","components_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.86252c8e.chunk.js","sourcesContent":["export const randomChoice = arr => {\n  return arr[Math.floor(Math.random() * arr.length)];\n};\n\nexport const upperFirst = string => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n\nexport const range = n => {\n  return [...Array(n).keys()]\n};\n\nconst generatePhrase = (n, wordList) => {\n  const phrase = range(n).map(i => {\n    return randomChoice(wordList);\n  });\n  return phrase.join(' ');\n};\n\nexport const generatePhrases = (count, phraseLength, wordList) => {\n  const phrases = range(count).map(i => {\n    return generatePhrase(phraseLength, wordList);\n  });\n  return phrases;\n};\n","import axios from 'axios';\n\nimport {\n  SHOW_MODAL,\n  HIDE_MODAL,\n  UPDATE_PHRASES,\n  UPDATE_COUNT,\n  UPDATE_LENGTH,\n  UPDATE_SELECTED_PHRASE,\n  UPDATE_WORDLIST,\n  UPDATE_SELECTED_WORDLIST,\n} from './types';\n\nexport const showModal = name => ({\n  type: SHOW_MODAL,\n  modal: name,\n});\n\nexport const hideModal = name => ({\n  type: HIDE_MODAL,\n  modal: name,\n});\n\nexport const updatePhrases = phrases => ({\n  type: UPDATE_PHRASES,\n  payload: phrases,\n});\n\nexport const updateCount = count => ({\n  type: UPDATE_COUNT,\n  payload: count,\n});\n\nexport const updateLength = len => ({\n  type: UPDATE_LENGTH,\n  payload: len,\n});\n\nexport const updateSelectedPhrase = phrase => ({\n  type: UPDATE_SELECTED_PHRASE,\n  payload: phrase,\n});\n\nexport const updateSelectedWordlist = key => ({\n  type: UPDATE_SELECTED_WORDLIST,\n  payload: key,\n});\n\nexport const fetchWordlist = key => async dispatch => {\n  try {\n    const words = await axios.get(`/api/wordlist/${key}`).then(res => res.data);\n    return dispatch({\n      type: UPDATE_WORDLIST,\n      payload: {\n        key,\n        words,\n      }\n    });\n  } catch (err) {\n    return Promise.reject(err.message)\n  }\n};\n","export const SHOW_MODAL = 'SHOW_MODAL';\nexport const HIDE_MODAL = 'HIDE_MODAL';\nexport const UPDATE_PHRASES = 'UPDATE_PHRASES';\nexport const UPDATE_COUNT = 'UPDATE_COUNT';\nexport const UPDATE_LENGTH = 'UPDATE_LENGTH';\nexport const UPDATE_SELECTED_PHRASE = 'UPDATE_SELECTED_PHRASE';\nexport const UPDATE_WORDLIST = 'UPDATE_WORDLIST';\nexport const UPDATE_SELECTED_WORDLIST = 'UPDATE_SELECTED_WORDLIST';\n","import React, { Component } from 'react'\nimport { Row, Col, Button, Modal, Tooltip, OverlayTrigger } from 'react-bootstrap'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport ClippySVG from './clippy.svg'\nimport { upperFirst } from '../../utils'\nimport { connect } from 'react-redux'\nimport * as actions from '../../actions'\n\nconst tooltip = (\n  <Tooltip id=\"tooltip\">\n    <strong>Copied!</strong>\n  </Tooltip>\n)\n\nconst removeSpaces = (s) => {\n  return s.split(' ').join('')\n}\n\nclass PassphraseCopyModal extends Component {\n  constructor(props) {\n    super(props)\n\n    this.copyButtonRef = null\n\n    this.setCopyButtonRef = (element) => {\n      this.copyButtonRef = element\n    }\n  }\n\n  handleCapNum = () => {\n    const { phrases, updateSelectedPhrase } = this.props\n    const { selectedPhrase } = phrases\n    const newText = upperFirst(selectedPhrase) + '1'\n    updateSelectedPhrase(newText)\n    setTimeout(() => {\n      this.refs.overlay.show()\n      setTimeout(() => {\n        this.refs.overlay.hide()\n      }, 1200)\n    }, 100)\n  }\n\n  handleRemoveSpaces = () => {\n    const { phrases, updateSelectedPhrase } = this.props\n    const { selectedPhrase } = phrases\n    const newText = selectedPhrase.split(' ').join('')\n    updateSelectedPhrase(newText)\n  }\n\n  handleUpdate = (e) => {\n    this.props.updateSelectedPhrase(e.target.value)\n  }\n\n  render() {\n    const { phrases } = this.props\n    const { selectedPhrase } = phrases\n\n    return (\n      <Modal\n        show={this.props.modals.box}\n        onHide={() => {\n          this.props.hideModal('box')\n        }}\n        onShow={() => {\n          setTimeout(() => {\n            this.refs.overlay.show()\n            setTimeout(() => {\n              this.refs.overlay.hide()\n            }, 1200)\n          }, 400)\n        }}\n        container={this}\n        aria-labelledby=\"contained-modal-title\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title\">Use the Passphrase</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Row>\n            <Col xs={12}>\n              <p>\n                The passphrase below has been copied to your clipboard automatically. If you want,\n                you can edit the text in the box; clicking the icon will copy your new text.\n              </p>\n            </Col>\n            <Col xs={12} className=\"input-group\">\n              <Col xs={1} />\n              <input\n                onChange={this.handleUpdate}\n                className=\"pw-text col-xs-8\"\n                value={selectedPhrase}\n              />\n              <span className=\"input-group-button col-xs-2\">\n                <CopyToClipboard text={selectedPhrase}>\n                  <OverlayTrigger\n                    ref=\"overlay\"\n                    placement=\"right\"\n                    trigger={['click']}\n                    overlay={tooltip}\n                    onClick={() => {\n                      setTimeout(() => {\n                        this.refs.overlay.hide()\n                      }, 1200)\n                    }}\n                  >\n                    <Button ref={this.setCopyButtonRef}>\n                      <img alt=\"clipboard\" src={ClippySVG} style={{ height: '24px' }} />\n                    </Button>\n                  </OverlayTrigger>\n                </CopyToClipboard>\n              </span>\n            </Col>\n            <Col xs={12}>\n              <p>\n                Heedless of my efforts, some sites will not trust your password without a capital\n                letter and a number, so you can click{' '}\n                <a className=\"copy-trigger\" onClick={this.handleCapNum}>\n                  here\n                </a>{' '}\n                to fulfill that requirement in the simplest possible way.\n              </p>\n            </Col>\n          </Row>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            onClick={() => {\n              this.props.hideModal('box')\n            }}\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  modals: state.modals,\n  phrases: state.phrases,\n})\n\nexport default connect(mapStateToProps, actions)(PassphraseCopyModal)\n","import React, { Component } from 'react';\nimport { generatePhrases } from '../../utils';\n\nimport { Col, Row, Button, Modal, Radio, FormGroup } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass SettingsModal extends Component {\n  changeWordList = key => {\n    const existingList = this.props.words[key];\n    if (!existingList) {\n      this.props\n        .fetchWordlist(key)\n        .then(() => {\n          this.props.updateSelectedWordlist(key);\n        })\n        .catch(err => {\n          console.log('Could not get list');\n        });\n    } else {\n      this.props.updateSelectedWordlist(key);\n    }\n  };\n\n  handleHide = () => {\n    const { phraseCount, phraseLength } = this.props.phrases;\n    const { selectedList } = this.props.words;\n    const wordList = this.props.words[selectedList];\n    const phrases = generatePhrases(phraseCount, phraseLength, wordList);\n    this.props.updatePhrases(phrases);\n    this.props.hideModal('settings');\n  };\n\n  handleUpdate = e => {\n    this.props.editPhrase(e.target.value);\n  };\n\n  handleRadio = e => {\n    this.changeWordList(e.target.value);\n  };\n\n  render() {\n    const { phrases } = this.props;\n    const { selectedList } = this.props.words;\n\n    return (\n      <Modal\n        show={this.props.modals.settings}\n        onHide={this.handleHide}\n        container={this}\n        aria-labelledby=\"contained-modal-title\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title\">Options</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Row>\n            <Col xs={2} />\n            <Col>\n              <div className=\"input-group col-sm-5\">\n                <span className=\"input-group-addon\">Passphrase Length</span>\n                <input\n                  className=\"form-control\"\n                  type=\"number\"\n                  value={phrases.phraseLength}\n                  onChange={e => {\n                    const val = Number(e.target.value)\n                    this.props.updateLength(val);\n                  }}\n                />\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs={2} />\n            <div className=\"input-group col-sm-5\">\n              <span className=\"input-group-addon\">Phrases to Create</span>\n              <input\n                className=\"form-control\"\n                aria-describedby=\"sizing-addon2\"\n                type=\"number\"\n                value={phrases.phraseCount}\n                onChange={e => {\n                  const val = Number(e.target.value)\n                  this.props.updateCount(val);\n                }}\n              />\n            </div>\n          </Row>\n          {/* <Row>\n            <Col xs={2} />\n            <Col>\n              <FormGroup onChange={this.handleRadio}>\n                {['got', 'potter', 'narnia'].map(key => {\n                  return (\n                    <Radio\n                      checked={key === selectedList}\n                      name=\"radioGroup\"\n                      key={key}\n                      value={key}\n                      inline\n                      readOnly\n                    >\n                      {key}\n                    </Radio>\n                  );\n                })}\n              </FormGroup>\n            </Col>\n          </Row> */}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            onClick={() => {\n              this.handleHide();\n            }}\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  modals: state.modals,\n  phrases: state.phrases,\n  words: state.words,\n});\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(SettingsModal);\n","import React, { Component } from 'react'\nimport { generatePhrases } from '../utils'\nimport { Grid, Panel, Row, Col, Button, ListGroup, ListGroupItem } from 'react-bootstrap'\nimport PassphraseCopyModal from './modals/PassphraseCopyModal'\nimport SettingsModal from './modals/SettingsModal'\nimport { connect } from 'react-redux'\nimport * as actions from '../actions'\n\nconst copyToClipboard = (str) => {\n  const el = document.createElement('textarea')\n  el.value = str\n  document.body.appendChild(el)\n  el.select()\n  document.execCommand('copy')\n  document.body.removeChild(el)\n}\n\nconst templates = {\n  got: {\n    title: 'Game of Thrones',\n    pw1: 'hodor',\n    pw2: 'h0dor',\n    pw3: 'Hodor123',\n  },\n  potter: {\n    title: 'Harry Potter',\n    pw1: 'voldemort',\n    pw2: 'v0ldemort',\n    pw3: 'Voldemort123',\n  },\n}\n\nclass App extends Component {\n  handleClick = (phrase) => {\n    const noSpaces = phrase.replace(/\\s/g, '')\n    copyToClipboard(noSpaces)\n    this.props.updateSelectedPhrase(noSpaces)\n    this.props.showModal('box')\n  }\n\n  handleModalShow = (name) => {\n    this.setState((prevState) => ({\n      modalVisibility: {\n        ...prevState.modalVisibility,\n        [name]: true,\n      },\n    }))\n  }\n\n  handleModalHide = (name) => {\n    if (name === 'settings') {\n      this.refreshPhrases()\n    }\n  }\n\n  componentDidMount() {\n    this.refreshPhrases()\n  }\n\n  refreshPhrases = () => {\n    const { selectedList } = this.props.words\n    const wordList = this.props.words[selectedList]\n    const { phraseCount, phraseLength } = this.props.phrases\n    const phrases = generatePhrases(phraseCount, phraseLength, wordList)\n    this.props.updatePhrases(phrases)\n  }\n\n  render() {\n    const { phrases } = this.props\n    const { phrases: phraseList } = phrases\n    const { selectedList } = this.props.words\n    const template = templates[selectedList]\n\n    return (\n      <Grid>\n        <h1 className=\"top-title\">{template.title} Passphrase Generator</h1>\n        <Row>\n          <Col xs={12} smOffset={2} sm={8}>\n            <Panel>\n              <ListGroup className=\"passphrases\">\n                {phraseList.map((phrase, i) => {\n                  return (\n                    <ListGroupItem\n                      className=\"pw-text\"\n                      onClick={() => {\n                        this.handleClick(phrase)\n                      }}\n                      key={i}\n                    >\n                      {phrase}\n                    </ListGroupItem>\n                  )\n                })}\n              </ListGroup>\n            </Panel>\n          </Col>\n          <Col xs={4} sm={2}>\n            <Button onClick={this.refreshPhrases}>Refresh</Button>\n          </Col>\n          <Col xs={4} sm={2}>\n            <Button\n              className=\"top-buffer\"\n              onClick={() => {\n                this.props.showModal('settings')\n              }}\n            >\n              Settings\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12}>\n            <p>\n              Increase your password strength using this xkcd-inspired passphrase generator with a{' '}\n              <em>{template.title}</em> twist.\n            </p>\n            <div className=\"section\">\n              <h3 className=\"section-title\">What's this about?</h3>\n              <p>\n                Whether your go-to is <span className=\"code\">{template.pw1}</span>,{' '}\n                <span className=\"code\">{template.pw2}</span>, or{' '}\n                <span className=\"code\">{template.pw3}</span>, people tend to follow predictable\n                patterns when tasked with creating a password. On the other hand, most\n                computer-generated passwords look something like this mess:{' '}\n                <span className=\"code\">jB2WvCp0</span>. My short-term memory span for such a\n                password is basically one character, meaning I have to refer back to an 8-character\n                password 8 times in order to type it successfully. Also, typing capital letters on a\n                smartphone screen is really annoying, and punctuation is even worse.\n              </p>\n              <p>\n                So the main purpose here is to create fun passphrases that require an minimum of\n                character manipulation and special symbols, and which you only have refer to once or\n                twice in order to transcribe successfully. They also should be relatively easy to\n                remember, at least compared to a random string of characters.\n              </p>\n            </div>\n            <div className=\"section\">\n              <h3 className=\"section-title\">How does it work?</h3>\n              <p>\n                The site picks at random from a list of the 4,000 most common words in the{' '}\n                <em>{template.title}</em> series to generate a passphrase. That randomness makes for\n                a pretty secure passphrase. For example, a four-word passphrase generated using this\n                method offers better security than a random 8-character password consisting of\n                letters and digits (there are almost 300 trillion possible four-word passphrases).\n              </p>\n              <p>\n                Longer passphrases, naturally, are more secure. Each word added to the passphrase\n                makes it 4,000 times harder to guess.\n              </p>\n            </div>\n            <div className=\"section\">\n              <h3 className=\"section-title\">\n                Does this website save the passphrases it generates?\n              </h3>\n              <p>\n                Nah, I wouldn't do that. But also, technically this website doesn't generate\n                passphrases, it just sends the list of words over to your browser and then{' '}\n                <em>you</em> generate the passphrases. So not only do I not save your passphrases, I\n                never even knew them in the first place.\n              </p>\n            </div>\n            <br />\n            <p>\n              <a href=\"https://xkcd.com/936/\">Here</a> is the relevant xkcd.\n            </p>\n            <footer className=\"footer\">\n              <p className=\"top-buffer pull-right\">Created by William Bruntrager</p>\n            </footer>\n          </Col>\n        </Row>\n        <PassphraseCopyModal />\n        <SettingsModal />\n      </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  modals: state.modals,\n  phrases: state.phrases,\n  words: state.words,\n})\n\nexport default connect(mapStateToProps, actions)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SHOW_MODAL, HIDE_MODAL } from '../actions/types';\n\nconst initialState = {\n  settings: false,\n  box: false,\n}\n\nexport default (state=initialState, action) => {\n  switch (action.type) {\n    case SHOW_MODAL:\n      return {\n        ...state,\n        [action.modal]: true,\n      }\n    case HIDE_MODAL:\n      return {\n        ...state,\n        [action.modal]: false,\n      }\n    default:\n      return state\n  }\n}\n","import {\n  UPDATE_PHRASES,\n  UPDATE_COUNT,\n  UPDATE_LENGTH,\n  UPDATE_SELECTED_PHRASE,\n} from '../actions/types';\n\nconst initialState = {\n  phrases: [],\n  phraseCount: 5,\n  phraseLength: 4,\n  selectedPhrase: '',\n}\n\nexport default (state=initialState, action) => {\n  switch (action.type) {\n    case UPDATE_PHRASES:\n      return {\n        ...state,\n        phrases: action.payload,\n      }\n    case UPDATE_COUNT:\n      return {\n        ...state,\n        phraseCount: action.payload,\n      }\n    case UPDATE_LENGTH:\n      return {\n        ...state,\n        phraseLength: action.payload,\n      }\n    case UPDATE_SELECTED_PHRASE:\n      return {\n        ...state,\n        selectedPhrase: action.payload\n      }\n    default:\n      return state\n  }\n}\n","import {\n  UPDATE_WORDLIST,\n  UPDATE_SELECTED_WORDLIST,\n} from '../actions/types';\nimport gotWords from '../data/got-long-words';\n\nconst initialState = {\n  selectedList : 'got',\n  got: gotWords\n}\n\nexport default (state=initialState, action) => {\n  switch (action.type) {\n    case UPDATE_WORDLIST:\n      return {\n        ...state,\n        [action.payload.key]: action.payload.words,\n      }\n    case UPDATE_SELECTED_WORDLIST:\n      return {\n        ...state,\n        selectedList: action.payload,\n      }\n    default:\n      return state\n  }\n}\n","const wordlist = [\n    \"abandon\", \"abandoned\", \"abed\", \"abel\",\n    \"able\", \"aboard\", \"above\", \"abruptly\",\n    \"absence\", \"accept\", \"accepted\", \"account\",\n    \"accused\", \"ache\", \"ached\", \"acolytes\",\n    \"acorn\", \"across\", \"act\", \"actually\",\n    \"addam\", \"added\", \"admiral\", \"admit\",\n    \"admitted\", \"aegon\", \"aemon\", \"aenys\",\n    \"aeron\", \"aerys\", \"afire\", \"afoot\",\n    \"afraid\", \"after\", \"afternoon\", \"afterward\",\n    \"again\", \"against\", \"age\", \"aged\",\n    \"aggo\", \"ago\", \"agony\", \"agree\",\n    \"agreed\", \"ahead\", \"air\", \"alayne\",\n    \"ale\", \"alester\", \"alike\", \"alive\",\n    \"alla\", \"alleras\", \"alley\", \"alleys\",\n    \"alliance\", \"alliser\", \"allow\", \"allowed\",\n    \"almost\", \"alone\", \"along\", \"aloud\",\n    \"already\", \"also\", \"always\", \"alyn\",\n    \"alys\", \"alysanne\", \"amidst\", \"among\",\n    \"amongst\", \"amory\", \"amused\", \"amusing\",\n    \"ancient\", \"andals\", \"anger\", \"angrily\",\n    \"angry\", \"anguy\", \"animal\", \"animals\",\n    \"ankle\", \"announced\", \"another\", \"answer\",\n    \"answered\", \"answers\", \"antlers\", \"anxious\",\n    \"anxiously\", \"anymore\", \"anyone\", \"anything\",\n    \"anyway\", \"anywhere\", \"apart\", \"appear\",\n    \"appeared\", \"apple\", \"apples\", \"approach\",\n    \"arakh\", \"arbor\", \"arch\", \"arched\",\n    \"archer\", \"archers\", \"aren\", \"areo\",\n    \"argued\", \"arianne\", \"arm\", \"armed\",\n    \"armies\", \"armor\", \"armored\", \"armorer\",\n    \"armory\", \"arms\", \"army\", \"arnolf\",\n    \"around\", \"arrived\", \"arrow\", \"arrows\",\n    \"arry\", \"arryn\", \"arse\", \"arstan\",\n    \"arthur\", \"arya\", \"arys\", \"ash\",\n    \"asha\", \"ashamed\", \"ashes\", \"ashore\",\n    \"aside\", \"ask\", \"asked\", \"asking\",\n    \"asks\", \"asleep\", \"assembled\", \"asshai\",\n    \"assured\", \"astapor\", \"astapori\", \"ate\",\n    \"atop\", \"attack\", \"attacked\", \"attempt\",\n    \"attend\", \"attended\", \"attention\", \"auburn\",\n    \"audience\", \"aunt\", \"aurane\", \"aurochs\",\n    \"autumn\", \"avoid\", \"awaited\", \"awaits\",\n    \"awake\", \"aware\", \"away\", \"awkward\",\n    \"awkwardly\", \"axe\", \"axell\", \"axes\",\n    \"aye\", \"babe\", \"babes\", \"baby\",\n    \"backed\", \"backs\", \"backward\", \"bacon\",\n    \"bad\", \"badge\", \"badly\", \"baelish\",\n    \"baelor\", \"bag\", \"bailey\", \"baked\",\n    \"balance\", \"bald\", \"balerion\", \"balls\",\n    \"balon\", \"band\", \"bank\", \"banks\",\n    \"banner\", \"bannermen\", \"banners\", \"bar\",\n    \"baratheon\", \"barber\", \"bard\", \"bare\",\n    \"bared\", \"barefoot\", \"bark\", \"barked\",\n    \"barking\", \"barley\", \"barracks\", \"barred\",\n    \"barrel\", \"barrels\", \"barristan\", \"barrow\",\n    \"barrowton\", \"bars\", \"base\", \"baseborn\",\n    \"basket\", \"bastard\", \"bastards\", \"bath\",\n    \"bathe\", \"bathed\", \"battle\", \"battles\",\n    \"bay\", \"beans\", \"bear\", \"beard\",\n    \"bearded\", \"bearing\", \"bears\", \"beast\",\n    \"beasts\", \"beat\", \"beaten\", \"beating\",\n    \"beautiful\", \"beauty\", \"became\", \"because\",\n    \"beckoned\", \"become\", \"bed\", \"bedded\",\n    \"bedding\", \"beds\", \"beef\", \"beer\",\n    \"before\", \"beg\", \"began\", \"beggar\",\n    \"begged\", \"begging\", \"begin\", \"beginning\",\n    \"begun\", \"behind\", \"behold\", \"being\",\n    \"believe\", \"believed\", \"bell\", \"bellies\",\n    \"bellowed\", \"bells\", \"belly\", \"belong\",\n    \"belonged\", \"belongs\", \"beloved\", \"below\",\n    \"belt\", \"belwas\", \"ben\", \"bench\",\n    \"benches\", \"bend\", \"beneath\", \"benjen\",\n    \"bent\", \"beric\", \"beside\", \"besides\",\n    \"best\", \"bet\", \"betha\", \"betray\",\n    \"betrayed\", \"betrothed\", \"better\", \"between\",\n    \"beyond\", \"bid\", \"big\", \"bigger\",\n    \"biggest\", \"bind\", \"bird\", \"birds\",\n    \"birth\", \"bit\", \"bite\",\n    \"biter\", \"biting\", \"bits\", \"bitter\",\n    \"bitterly\", \"black\", \"blackened\", \"blackfish\",\n    \"blackwood\", \"blade\", \"blades\", \"blame\",\n    \"blanket\", \"blankets\", \"blaze\", \"bleak\",\n    \"bleed\", \"bleeding\", \"bless\", \"blessed\",\n    \"blew\", \"blind\", \"blink\", \"blinked\",\n    \"blisters\", \"block\", \"blond\", \"blood\",\n    \"bloody\", \"blount\", \"blow\", \"blowing\",\n    \"blows\", \"blue\", \"blunt\", \"blurted\",\n    \"boar\", \"boast\", \"boasted\", \"boat\",\n    \"boats\", \"bobbed\", \"bodice\", \"bodies\",\n    \"body\", \"boil\", \"boiled\", \"boiling\",\n    \"bold\", \"bolt\", \"bolton\", \"bone\",\n    \"bones\", \"bony\", \"book\", \"books\",\n    \"boom\", \"boomed\", \"boot\", \"boots\",\n    \"bore\", \"bored\", \"born\", \"borne\",\n    \"boros\", \"both\", \"bother\", \"botley\",\n    \"bottom\", \"bought\", \"bound\", \"bow\",\n    \"bowed\", \"bowels\", \"bowen\", \"bowl\",\n    \"bowmen\", \"bows\", \"box\", \"boy\",\n    \"boys\", \"braavos\", \"braavosi\", \"bracken\",\n    \"braid\", \"bran\", \"branch\", \"branches\",\n    \"brandon\", \"brass\", \"brave\", \"brax\",\n    \"brazen\", \"brazier\", \"bread\", \"break\",\n    \"breakfast\", \"breaking\", \"breast\", \"breasts\",\n    \"breath\", \"breathe\", \"breathing\", \"breeches\",\n    \"brick\", \"bricks\", \"bride\", \"bridge\",\n    \"briefly\", \"brienne\", \"bright\", \"bring\",\n    \"bringing\", \"brings\", \"broad\", \"broke\",\n    \"broken\", \"bronn\", \"bronze\", \"brooding\",\n    \"broth\", \"brothel\", \"brothels\", \"brother\",\n    \"brothers\", \"brought\", \"brow\", \"brown\",\n    \"bruises\", \"brune\", \"brusco\", \"brush\",\n    \"brushed\", \"brutal\", \"brynden\", \"bucket\",\n    \"bugger\", \"build\", \"builder\", \"builders\",\n    \"building\", \"buildings\", \"built\", \"bull\",\n    \"bulwer\", \"buried\", \"burn\", \"burned\",\n    \"burning\", \"burns\", \"burnt\", \"burst\",\n    \"bury\", \"business\", \"butcher\", \"butchered\",\n    \"butt\", \"butter\", \"buy\", \"bywater\",\n    \"cabin\", \"cage\", \"cailin\", \"cakes\",\n    \"call\", \"called\", \"calling\", \"calls\",\n    \"calm\", \"came\", \"camp\", \"camps\",\n    \"canal\", \"canals\", \"candle\", \"candles\",\n    \"cannot\", \"canvas\", \"cape\", \"captain\",\n    \"captains\", \"captive\", \"captives\", \"captured\",\n    \"carcass\", \"care\", \"cared\", \"careful\",\n    \"carefully\", \"caron\", \"carpet\", \"carried\",\n    \"carrots\", \"carry\", \"carrying\", \"cart\",\n    \"carts\", \"carved\", \"case\", \"cask\",\n    \"casks\", \"cassel\", \"cast\", \"castellan\",\n    \"casterly\", \"castle\", \"castles\", \"cat\",\n    \"catch\", \"catelyn\", \"cats\", \"caught\",\n    \"cause\", \"causeway\", \"cave\", \"ceiling\",\n    \"cell\", \"cellar\", \"cellars\", \"cells\",\n    \"center\", \"centuries\", \"cersei\", \"certain\",\n    \"certainly\", \"certainty\", \"cerwyn\", \"chain\",\n    \"chained\", \"chainmail\", \"chains\", \"chair\",\n    \"chairs\", \"chamber\", \"chambers\", \"champion\",\n    \"champions\", \"chance\", \"change\", \"changed\",\n    \"chaos\", \"charge\", \"charged\", \"charred\",\n    \"chase\", \"chased\", \"chasing\", \"chataya\",\n    \"cheek\", \"cheeks\", \"cheese\", \"chest\",\n    \"chestnut\", \"chests\", \"chett\", \"chewed\",\n    \"chewing\", \"chicken\", \"chief\", \"child\",\n    \"children\", \"chill\", \"chilly\", \"chin\",\n    \"choice\", \"choke\", \"choked\", \"choking\",\n    \"choose\", \"choosing\", \"chose\", \"chosen\",\n    \"chuckled\", \"chunk\", \"chunks\", \"cinnamon\",\n    \"circle\", \"circled\", \"circling\", \"citadel\",\n    \"cities\", \"city\", \"clad\", \"claim\",\n    \"claimed\", \"claims\", \"clams\", \"clans\",\n    \"clansmen\", \"clapped\", \"clasped\", \"clatter\",\n    \"claw\", \"claws\", \"clean\", \"clear\",\n    \"cleared\", \"clegane\", \"clenched\", \"cleon\",\n    \"cleos\", \"clever\", \"cliff\", \"climb\",\n    \"climbed\", \"climbing\", \"clinging\", \"cloak\",\n    \"cloaked\", \"cloaks\", \"close\", \"closed\",\n    \"closely\", \"closer\", \"closing\", \"cloth\",\n    \"clothes\", \"clothing\", \"cloud\", \"clouds\",\n    \"clumsy\", \"clung\", \"clutched\", \"clutching\",\n    \"clydas\", \"coals\", \"coarse\", \"coast\",\n    \"cock\", \"cocked\", \"cog\", \"coiled\",\n    \"coin\", \"coins\", \"cold\", \"colder\",\n    \"colemon\", \"collapsed\", \"collar\", \"color\",\n    \"colored\", \"colors\", \"column\", \"combat\",\n    \"come\", \"comely\", \"comes\", \"comet\",\n    \"comfort\", \"coming\", \"command\", \"commanded\",\n    \"commander\", \"commands\", \"common\", \"companies\",\n    \"companion\", \"company\", \"compared\", \"complain\",\n    \"concealed\", \"concern\", \"concerned\", \"confess\",\n    \"confessed\", \"confused\", \"confusion\", \"conqueror\",\n    \"conquest\", \"consent\", \"consider\", \"contempt\",\n    \"content\", \"continue\", \"continued\", \"convinced\",\n    \"cook\", \"cooked\", \"cooks\", \"cool\",\n    \"copper\", \"corbray\", \"corn\", \"corner\",\n    \"corpse\", \"corpses\", \"corrected\", \"cortnay\",\n    \"cost\", \"cotter\", \"coughed\", \"coughing\",\n    \"couldn\", \"council\", \"counsel\", \"counselor\",\n    \"count\", \"counted\", \"counting\", \"courage\",\n    \"course\", \"courser\", \"court\", \"courteous\",\n    \"courtesy\", \"cousin\", \"cousins\", \"cover\",\n    \"covered\", \"cow\", \"coward\", \"crabb\",\n    \"crabs\", \"crack\", \"cracked\", \"crackling\",\n    \"crag\", \"crakehall\", \"cramped\", \"crane\",\n    \"crash\", \"crashed\", \"crashing\", \"craster\",\n    \"craven\", \"crawl\", \"crawled\", \"crawling\",\n    \"cream\", \"creature\", \"creatures\", \"creeping\",\n    \"creighton\", \"crept\", \"crescent\", \"cressen\",\n    \"crew\", \"cried\", \"cries\", \"crime\",\n    \"crimes\", \"crimson\", \"cripple\", \"crippled\",\n    \"crisp\", \"crone\", \"crooked\", \"cross\",\n    \"crossbow\", \"crossed\", \"crossing\", \"crow\",\n    \"crowd\", \"crowded\", \"crown\", \"crowned\",\n    \"crowns\", \"crows\", \"crude\", \"cruel\",\n    \"crumbling\", \"crunch\", \"crushed\", \"crust\",\n    \"cry\", \"crying\", \"crypts\", \"crystal\",\n    \"cunning\", \"cunt\", \"cup\", \"cupped\",\n    \"cups\", \"curious\", \"curled\", \"curls\",\n    \"current\", \"curse\", \"cursed\", \"curses\",\n    \"cursing\", \"curtain\", \"curtains\", \"curved\",\n    \"cushions\", \"custom\", \"cut\", \"cuts\",\n    \"cutting\", \"cyvasse\", \"daario\", \"daenerys\",\n    \"daeron\", \"dagger\", \"daggers\", \"dagmer\",\n    \"dais\", \"dalla\", \"damn\", \"damned\",\n    \"damon\", \"damp\", \"damphair\", \"dance\",\n    \"danced\", \"dancer\", \"dancing\", \"danger\",\n    \"dangerous\", \"dangling\", \"dany\", \"dare\",\n    \"dared\", \"dareon\", \"dark\", \"darkened\",\n    \"darker\", \"darkness\", \"darry\", \"darted\",\n    \"daughter\", \"daughters\", \"daven\", \"davos\",\n    \"dawn\", \"daxos\", \"day\", \"dayne\",\n    \"days\", \"dead\", \"deadly\", \"deaf\",\n    \"deal\", \"dear\", \"death\", \"deaths\",\n    \"debt\", \"debts\", \"decide\", \"decided\",\n    \"deck\", \"decks\", \"declared\", \"decreed\",\n    \"deeds\", \"deep\", \"deeper\", \"deeply\",\n    \"deepwood\", \"deer\", \"defeat\", \"defeated\",\n    \"defend\", \"defenders\", \"delicate\", \"delight\",\n    \"deliver\", \"delivered\", \"demanded\", \"demon\",\n    \"den\", \"denied\", \"deny\", \"denys\",\n    \"depart\", \"departed\", \"descended\", \"descent\",\n    \"deserted\", \"deserved\", \"desire\", \"desmond\",\n    \"despair\", \"desperate\", \"despite\", \"devan\",\n    \"dick\", \"didn\", \"die\", \"died\",\n    \"dies\", \"different\", \"difficult\", \"digging\",\n    \"dim\", \"dipped\", \"direwolf\", \"dirk\",\n    \"dirt\", \"dirty\", \"dish\", \"dismay\",\n    \"dismissed\", \"distance\", \"distant\", \"divided\",\n    \"dizzy\", \"docks\", \"does\", \"doesn\",\n    \"dog\", \"dogs\", \"doing\", \"dolorous\",\n    \"dome\", \"don\", \"donal\", \"done\",\n    \"donned\", \"donnel\", \"dontos\", \"doom\",\n    \"doomed\", \"door\", \"doors\", \"doran\",\n    \"doreah\", \"dorne\", \"dornish\", \"dothrak\",\n    \"dothraki\", \"double\", \"doublet\", \"doubt\",\n    \"doubtless\", \"doubts\", \"dozen\", \"drag\",\n    \"dragged\", \"dragging\", \"dragon\", \"dragons\",\n    \"drank\", \"draped\", \"draw\", \"drawing\",\n    \"drawn\", \"dread\", \"dreadfort\", \"dream\",\n    \"dreamed\", \"dreaming\", \"dreams\", \"dreamt\",\n    \"dress\", \"dressed\", \"drew\", \"dried\",\n    \"drifted\", \"drifting\", \"drifts\", \"driftwood\",\n    \"drink\", \"drinking\", \"dripped\", \"dripping\",\n    \"drive\", \"driven\", \"driving\", \"drogo\",\n    \"drogon\", \"drop\", \"dropped\", \"drove\",\n    \"drown\", \"drowned\", \"drowning\", \"drum\",\n    \"drums\", \"drunk\", \"drunken\", \"dry\",\n    \"duck\", \"due\", \"dug\", \"dull\",\n    \"dung\", \"dungeon\", \"dungeons\", \"during\",\n    \"dusk\", \"dusky\", \"dust\", \"dustin\",\n    \"dusty\", \"duties\", \"duty\", \"duur\",\n    \"dwarf\", \"dwarfs\", \"dwindled\", \"dying\",\n    \"dywen\", \"each\", \"eager\", \"eagerly\",\n    \"eagle\", \"ear\", \"early\", \"earned\",\n    \"ears\", \"earth\", \"ease\", \"eased\",\n    \"easier\", \"easily\", \"east\", \"eastern\",\n    \"eastwatch\", \"easy\", \"eat\", \"eaten\",\n    \"eating\", \"echoed\", \"echoing\", \"edd\",\n    \"eddard\", \"edge\", \"edged\", \"edmure\",\n    \"edric\", \"edwyn\", \"eel\", \"effort\",\n    \"egg\", \"eggs\", \"eight\", \"eighteen\",\n    \"eighty\", \"either\", \"elbow\", \"elder\",\n    \"eldest\", \"elephants\", \"eleven\", \"elia\",\n    \"elinor\", \"elk\", \"ellaria\", \"else\",\n    \"elsewhere\", \"elsewise\", \"embers\", \"embrace\",\n    \"emerge\", \"emerged\", \"emmett\", \"emmon\",\n    \"empty\", \"end\", \"ended\", \"endless\",\n    \"ends\", \"enemies\", \"enemy\", \"enjoy\",\n    \"enjoyed\", \"enough\", \"enter\", \"entered\",\n    \"entirely\", \"entrails\", \"entrance\", \"envoy\",\n    \"equal\", \"erik\", \"escape\", \"escaped\",\n    \"escort\", \"escorted\", \"estermont\", \"eunuch\",\n    \"eunuchs\", \"euron\", \"even\", \"evenfall\",\n    \"evening\", \"ever\", \"every\", \"everyone\",\n    \"evil\", \"except\", \"exchange\", \"exchanged\",\n    \"excuse\", \"exhausted\", \"exile\", \"expect\",\n    \"expected\", \"explained\", \"eye\", \"eyed\",\n    \"eyes\", \"eyrie\", \"face\", \"faced\",\n    \"faces\", \"faded\", \"fail\", \"failed\",\n    \"failing\", \"faint\", \"faintly\", \"fair\",\n    \"faith\", \"faithful\", \"falcon\", \"fall\",\n    \"fallen\", \"falling\", \"falls\", \"false\",\n    \"falyse\", \"familiar\", \"family\", \"famous\",\n    \"far\", \"farce\", \"farewell\", \"farring\",\n    \"farther\", \"fashion\", \"fast\", \"fastened\",\n    \"faster\", \"fat\", \"fate\", \"father\",\n    \"fathered\", \"fathers\", \"fault\", \"favor\",\n    \"favored\", \"favorite\", \"fealty\", \"fear\",\n    \"feared\", \"fearful\", \"fearless\", \"fears\",\n    \"fearsome\", \"feast\", \"feasted\", \"feasts\",\n    \"feathers\", \"features\", \"fed\", \"feeble\",\n    \"feed\", \"feeding\", \"feel\", \"feeling\",\n    \"feels\", \"feet\", \"fell\", \"fellow\",\n    \"fellows\", \"felt\", \"female\", \"fetch\",\n    \"fever\", \"few\", \"fewer\", \"field\",\n    \"fields\", \"fierce\", \"fiercely\", \"fiery\",\n    \"fifteen\", \"fifth\", \"fifty\", \"fight\",\n    \"fighter\", \"fighters\", \"fighting\", \"fill\",\n    \"filled\", \"filling\", \"filthy\", \"final\",\n    \"finally\", \"find\", \"finding\", \"fine\",\n    \"finest\", \"finger\", \"fingers\", \"finish\",\n    \"finished\", \"fire\", \"fires\", \"firmly\",\n    \"first\", \"fish\", \"fishing\", \"fist\",\n    \"fists\", \"fit\", \"fitting\", \"five\",\n    \"fixed\", \"flagon\", \"flame\", \"flames\",\n    \"flaming\", \"flap\", \"flapped\", \"flapping\",\n    \"flashed\", \"flashing\", \"flat\", \"flayed\",\n    \"flea\", \"fled\", \"flee\", \"fleet\",\n    \"flesh\", \"flew\", \"flicked\", \"flies\",\n    \"flight\", \"flint\", \"floated\", \"floating\",\n    \"floor\", \"floors\", \"florent\", \"florian\",\n    \"flow\", \"flowed\", \"flower\", \"flowers\",\n    \"flowing\", \"flung\", \"flushed\", \"fly\",\n    \"flying\", \"foe\", \"foes\", \"fog\",\n    \"folded\", \"folk\", \"follow\", \"followed\",\n    \"followers\", \"following\", \"folly\", \"fond\",\n    \"food\", \"fool\", \"foolish\", \"fools\",\n    \"foot\", \"footsteps\", \"force\", \"forced\",\n    \"ford\", \"forehead\", \"forel\", \"forest\",\n    \"forever\", \"forge\", \"forged\", \"forget\",\n    \"forgive\", \"forgot\", \"forgotten\", \"fork\",\n    \"form\", \"formed\", \"former\", \"formerly\",\n    \"forth\", \"fortnight\", \"fortunate\", \"forty\",\n    \"forward\", \"fossoway\", \"fought\", \"foul\",\n    \"found\", \"four\", \"fourteen\", \"fourth\",\n    \"fox\", \"frail\", \"free\", \"freed\",\n    \"freedmen\", \"freedom\", \"freely\", \"freeze\",\n    \"fresh\", \"frey\", \"freys\", \"fried\",\n    \"friend\", \"friends\", \"frighten\", \"frog\",\n    \"front\", \"frowned\", \"frowning\", \"froze\",\n    \"frozen\", \"fruit\",\n    \"full\", \"fumbled\", \"funny\",\n    \"fur\", \"furious\", \"furs\", \"further\",\n    \"fury\", \"future\", \"galbart\", \"gallant\",\n    \"gallery\", \"galley\", \"galleys\", \"gallop\",\n    \"galloped\", \"game\", \"gaoler\", \"gaped\",\n    \"garb\", \"garbed\", \"garden\", \"gardens\",\n    \"gared\", \"gargoyles\", \"garin\", \"garlan\",\n    \"garrison\", \"garron\", \"garrons\", \"garth\",\n    \"gash\", \"gasp\", \"gasped\", \"gate\",\n    \"gatehouse\", \"gates\", \"gather\", \"gathered\",\n    \"gathering\", \"gaunt\", \"gave\", \"gaze\",\n    \"gazed\", \"gazing\", \"gelding\", \"gendry\",\n    \"generous\", \"genna\", \"gentle\", \"gently\",\n    \"gerold\", \"gerris\", \"gesture\", \"gestured\",\n    \"gets\", \"getting\", \"ghar\", \"ghis\",\n    \"ghiscari\", \"ghost\", \"ghosts\", \"giant\",\n    \"giants\", \"gift\", \"gifts\", \"giggled\",\n    \"gilded\", \"gilly\", \"girl\", \"girls\",\n    \"give\", \"given\", \"gives\", \"giving\",\n    \"glad\", \"gladly\", \"glance\", \"glanced\",\n    \"glare\", \"glass\", \"gleamed\", \"glimmered\",\n    \"glimpse\", \"glimpsed\", \"glittered\", \"gloom\",\n    \"gloomy\", \"glory\", \"glove\", \"gloved\",\n    \"glover\", \"gloves\", \"glow\", \"glowing\",\n    \"gnarled\", \"goat\", \"goats\", \"goblet\",\n    \"god\", \"godry\", \"gods\", \"godswood\",\n    \"goes\", \"going\", \"gold\", \"golden\",\n    \"gone\", \"good\", \"goods\", \"goose\",\n    \"got\", \"gotten\", \"gown\", \"grab\",\n    \"grabbed\", \"grace\", \"graces\", \"grand\",\n    \"grandson\", \"grandsons\", \"granite\", \"grant\",\n    \"granted\", \"grasp\", \"grasped\", \"grass\",\n    \"grateful\", \"grave\", \"grazdan\", \"grease\",\n    \"greasy\", \"great\", \"greater\", \"greatest\",\n    \"greatjon\", \"green\", \"greeted\", \"gregor\",\n    \"grenn\", \"grew\", \"grey\", \"greyjoy\",\n    \"grief\", \"grievous\", \"griff\", \"griffin\",\n    \"grim\", \"grimaced\", \"grin\", \"grinned\",\n    \"grinning\", \"grip\", \"groleo\", \"grotesque\",\n    \"ground\", \"grove\", \"grow\", \"growing\",\n    \"growled\", \"grown\", \"grows\", \"grumbled\",\n    \"grunt\", \"grunted\", \"guard\", \"guarded\",\n    \"guards\", \"guardsman\", \"guardsmen\", \"guess\",\n    \"guest\", \"guests\", \"guilt\", \"guilty\",\n    \"gulltown\", \"gust\", \"gut\", \"gyles\",\n    \"hacked\", \"hadn\", \"hair\", \"haired\",\n    \"hairs\", \"hairy\", \"hal\", \"halder\",\n    \"haldon\", \"half\", \"halfhand\", \"halfway\",\n    \"hall\", \"halls\", \"hallyne\", \"halt\",\n    \"ham\", \"hammer\", \"hammered\", \"hand\",\n    \"handed\", \"handful\", \"handmaids\", \"hands\",\n    \"handsome\", \"hang\", \"hanged\", \"hanging\",\n    \"happen\", \"happened\", \"happening\", \"happens\",\n    \"happily\", \"happy\", \"harbor\", \"hard\",\n    \"harder\", \"hardhome\", \"hardly\", \"harlaw\",\n    \"harm\", \"harma\", \"harmed\", \"harp\",\n    \"harpy\", \"harren\", \"harrenhal\", \"harry\",\n    \"harsh\", \"harvest\", \"harwin\", \"harys\",\n    \"has\", \"haste\", \"hat\", \"hate\",\n    \"hated\", \"haunted\", \"haven\", \"having\",\n    \"hawk\", \"head\", \"headed\", \"heads\",\n    \"headsman\", \"heal\", \"healer\", \"healing\",\n    \"healthy\", \"hear\", \"heard\", \"hearing\",\n    \"hears\", \"heart\", \"heartbeat\", \"hearth\",\n    \"hearts\", \"heat\", \"heavier\", \"heavily\",\n    \"heavy\", \"hedge\", \"heed\", \"heel\",\n    \"heels\", \"heh\", \"height\", \"heir\",\n    \"heirs\", \"held\", \"hell\", \"hells\",\n    \"helm\", \"helms\", \"help\", \"helped\",\n    \"helping\", \"helpless\", \"herald\", \"hero\",\n    \"heroes\", \"hers\", \"herself\", \"hesitated\",\n    \"hid\", \"hidden\", \"hide\", \"hideous\",\n    \"hides\", \"hiding\", \"high\", \"highborn\",\n    \"higher\", \"hightower\", \"hill\", \"hills\",\n    \"hilt\", \"himself\", \"hinges\", \"hint\",\n    \"hip\", \"hips\", \"hire\", \"hired\",\n    \"hissed\", \"history\", \"hit\", \"hizdahr\",\n    \"hllor\", \"hoat\", \"hobb\", \"hobber\",\n    \"hodor\", \"hold\", \"holdfast\", \"holdfasts\",\n    \"holding\", \"holds\", \"hole\", \"holes\",\n    \"holiness\", \"hollow\", \"holly\", \"holy\",\n    \"home\", \"homely\", \"homes\", \"honest\",\n    \"honey\", \"honor\", \"honorable\", \"honored\",\n    \"honors\", \"hood\", \"hooded\", \"hook\",\n    \"hooves\", \"hope\", \"hoped\", \"hopes\",\n    \"hoping\", \"hopped\", \"horas\", \"horizon\",\n    \"horn\", \"horns\", \"hornwood\", \"horror\",\n    \"horse\", \"horses\", \"host\", \"hostage\",\n    \"hostages\", \"hosteen\", \"hoster\", \"hot\",\n    \"hotah\", \"hound\", \"hounds\", \"hour\",\n    \"hours\", \"house\", \"household\", \"houses\",\n    \"hovels\", \"however\", \"howl\", \"howled\",\n    \"howling\", \"huddled\", \"huge\", \"hugged\",\n    \"hugor\", \"hull\", \"human\", \"humble\",\n    \"hunched\", \"hundred\", \"hundreds\", \"hung\",\n    \"hunger\", \"hungry\", \"hunt\", \"hunted\",\n    \"hunter\", \"hunting\", \"huntsman\", \"hurried\",\n    \"hurry\", \"hurt\", \"husband\", \"hushed\",\n    \"hyle\", \"ice\", \"icy\", \"idea\",\n    \"ignore\", \"ignored\", \"ill\", \"illyrio\",\n    \"ilyn\", \"imagine\", \"immense\", \"imp\",\n    \"important\", \"inch\", \"inches\", \"inclined\",\n    \"indeed\", \"informed\", \"ink\", \"inn\",\n    \"inner\", \"innkeep\", \"innocence\", \"innocent\",\n    \"inside\", \"insist\", \"insisted\", \"instant\",\n    \"instead\", \"intend\", \"intended\", \"intent\",\n    \"interest\", \"iron\", \"ironborn\", \"ironmen\",\n    \"irri\", \"island\", \"islands\", \"isle\",\n    \"isles\", \"isn\", \"itself\", \"ivory\",\n    \"jacelyn\", \"jack\", \"jade\", \"jaehaerys\",\n    \"jagged\", \"jaime\", \"janos\", \"jape\",\n    \"japes\", \"jaqen\", \"jared\", \"jaremy\",\n    \"jarl\", \"jars\", \"jason\", \"jaw\",\n    \"jaws\", \"jerked\", \"jerkin\", \"jest\",\n    \"jeweled\", \"jewels\", \"jeyne\", \"jhiqui\",\n    \"jhogo\", \"joff\", \"joffrey\", \"join\",\n    \"joined\", \"jojen\", \"jon\", \"jonos\",\n    \"jorah\", \"jory\", \"journey\", \"joust\",\n    \"joy\", \"judge\", \"judged\", \"judgment\",\n    \"juice\", \"jumped\", \"justice\", \"justin\",\n    \"karhold\", \"karstark\", \"karstarks\", \"keep\",\n    \"keeping\", \"keeps\", \"kept\", \"kettle\",\n    \"kevan\", \"key\", \"keys\", \"khal\",\n    \"khalasar\", \"khaleesi\", \"khrazz\", \"kick\",\n    \"kicked\", \"kicking\", \"kill\", \"killed\",\n    \"killer\", \"killing\", \"kin\", \"kind\",\n    \"kindly\", \"kindness\", \"king\", \"kingdom\",\n    \"kingdoms\", \"kings\", \"kingsmoot\", \"kingsroad\",\n    \"kingswood\", \"kinslayer\", \"kiss\", \"kissed\",\n    \"kisses\", \"kissing\", \"kitchen\", \"kitchens\",\n    \"knee\", \"kneel\", \"kneeling\", \"knees\",\n    \"knelt\", \"knew\", \"knife\", \"knight\",\n    \"knights\", \"knives\", \"knock\", \"knocked\",\n    \"knocking\", \"knowing\", \"knowledge\", \"known\",\n    \"knows\", \"kraken\", \"kraznys\", \"kyra\",\n    \"lace\", \"laced\", \"lack\", \"lacked\",\n    \"lad\", \"ladder\", \"ladies\", \"lads\",\n    \"lady\", \"laid\", \"lake\", \"lakes\",\n    \"lamb\", \"lame\", \"lamp\", \"lance\",\n    \"lancel\", \"lances\", \"land\", \"landed\",\n    \"landing\", \"lands\", \"lannister\", \"lantern\",\n    \"lap\", \"large\", \"larger\", \"largest\",\n    \"lark\", \"lash\", \"lashed\", \"last\",\n    \"late\", \"later\", \"laugh\", \"laughed\",\n    \"laughing\", \"laughter\", \"law\", \"laws\",\n    \"lay\", \"layers\", \"lazy\", \"lead\",\n    \"leader\", \"leading\", \"leaf\", \"leagues\",\n    \"lean\", \"leaned\", \"leaning\", \"leaping\",\n    \"leapt\", \"learn\", \"learned\", \"least\",\n    \"leather\", \"leathers\", \"leave\", \"leaves\",\n    \"leaving\", \"led\", \"leeches\", \"left\",\n    \"leg\", \"legged\", \"legs\", \"lem\",\n    \"lemon\", \"lemore\", \"length\", \"leo\",\n    \"less\", \"lesser\", \"lesson\", \"lest\",\n    \"let\", \"letter\", \"letters\", \"letting\",\n    \"level\", \"leyton\", \"liar\", \"lick\",\n    \"licked\", \"liddle\", \"lie\", \"lied\",\n    \"liege\", \"lies\", \"life\", \"lift\",\n    \"lifted\", \"lifting\", \"light\", \"lightly\",\n    \"lightning\", \"lights\", \"liked\", \"likely\",\n    \"likeness\", \"likes\", \"limb\", \"limbs\",\n    \"limp\", \"line\", \"lined\", \"linen\",\n    \"lines\", \"linger\", \"lingered\", \"links\",\n    \"lion\", \"lions\", \"lip\", \"lips\",\n    \"list\", \"listen\", \"listened\", \"listening\",\n    \"lists\", \"lit\", \"litter\", \"little\",\n    \"live\", \"lived\", \"lives\", \"living\",\n    \"lock\", \"locke\", \"locked\", \"log\",\n    \"logs\", \"lollys\", \"lommy\", \"lonely\",\n    \"long\", \"longaxe\", \"longbow\", \"longclaw\",\n    \"longer\", \"longships\", \"longsword\", \"look\",\n    \"looked\", \"looking\", \"looks\", \"loomed\",\n    \"looming\", \"loose\", \"loosed\", \"loraq\",\n    \"loras\", \"lorch\", \"lord\", \"lordling\",\n    \"lordlings\", \"lords\", \"lordship\", \"lordsport\",\n    \"lorren\", \"lose\", \"losing\", \"loss\",\n    \"lost\", \"lot\", \"lothar\", \"lothor\",\n    \"loud\", \"louder\", \"loudly\", \"love\",\n    \"loved\", \"lovely\", \"lover\", \"loves\",\n    \"low\", \"lower\", \"lowered\", \"loyal\",\n    \"loyalty\", \"lucas\", \"luck\", \"lucky\",\n    \"lurched\", \"lust\", \"luwin\", \"lyanna\",\n    \"lying\", \"lyn\", \"lyonel\", \"lys\",\n    \"lysa\", \"lysene\", \"lyseni\", \"mace\",\n    \"mad\", \"made\", \"madness\", \"maege\",\n    \"maegi\", \"maegor\", \"maester\", \"maesters\",\n    \"magic\", \"magister\", \"magnar\", \"maid\",\n    \"maiden\", \"maidens\", \"maids\", \"mail\",\n    \"mailed\", \"maimed\", \"main\", \"make\",\n    \"makes\", \"making\", \"male\", \"mallister\",\n    \"mammoth\", \"mammoths\", \"managed\", \"mance\",\n    \"mander\", \"manderly\", \"mandon\", \"mane\",\n    \"manhood\", \"manner\", \"manse\", \"mantle\",\n    \"many\", \"map\", \"maps\", \"marble\",\n    \"marbrand\", \"march\", \"marched\", \"marches\",\n    \"marching\", \"mare\", \"margaery\", \"marillion\",\n    \"mark\", \"marked\", \"market\", \"marks\",\n    \"marq\", \"marriage\", \"married\", \"marry\",\n    \"marsh\", \"martell\", \"martyn\", \"marwyn\",\n    \"marya\", \"mask\", \"massey\", \"massive\",\n    \"mast\", \"master\", \"masters\", \"match\",\n    \"mathis\", \"matter\", \"mattered\", \"matters\",\n    \"may\", \"maybe\", \"mayhaps\", \"maz\",\n    \"mead\", \"meal\", \"meals\", \"mean\",\n    \"meaning\", \"means\", \"meant\", \"meat\",\n    \"meera\", \"meereen\", \"meet\", \"meeting\",\n    \"megga\", \"melt\", \"melted\", \"melting\",\n    \"member\", \"memory\", \"men\", \"mention\",\n    \"merchant\", \"merchants\", \"mercy\", \"mere\",\n    \"meribald\", \"meris\", \"merrett\", \"merry\",\n    \"meryn\", \"message\", \"messages\", \"met\",\n    \"metal\", \"midday\", \"middle\", \"midnight\",\n    \"midst\", \"might\", \"mighty\", \"mikken\",\n    \"mile\", \"miles\", \"milk\", \"milkwater\",\n    \"mill\", \"mind\", \"mine\", \"mirri\",\n    \"miss\", \"missandei\", \"missed\", \"missing\",\n    \"mist\", \"mistake\", \"mistaken\", \"mists\",\n    \"moat\", \"mob\", \"mock\", \"mocked\",\n    \"mockery\", \"mocking\", \"modest\", \"mole\",\n    \"mollen\", \"moment\", \"moments\", \"monkey\",\n    \"monster\", \"monsters\", \"monstrous\", \"mood\",\n    \"moon\", \"moonlight\", \"moqorro\", \"mord\",\n    \"mordane\", \"mormont\", \"morning\", \"morrow\",\n    \"mors\", \"mortal\", \"moss\", \"most\",\n    \"mostly\", \"mother\", \"mothers\", \"motion\",\n    \"motley\", \"motte\", \"mount\", \"mountain\",\n    \"mountains\", \"mounted\", \"mounts\", \"mourning\",\n    \"mouse\", \"mouth\", \"mouths\", \"move\",\n    \"moved\", \"moving\", \"much\", \"mud\",\n    \"muddy\", \"muffled\", \"mule\", \"mules\",\n    \"mulled\", \"mully\", \"mummer\", \"mummers\",\n    \"murder\", \"murdered\", \"murmured\", \"muscle\",\n    \"muscles\", \"mused\", \"mushrooms\", \"music\",\n    \"must\", \"mustache\", \"muttered\", \"muttering\",\n    \"mutton\", \"mya\", \"mycah\", \"myr\",\n    \"myranda\", \"myrcella\", \"myrish\", \"myself\",\n    \"naharis\", \"nails\", \"naked\", \"name\",\n    \"named\", \"names\", \"nan\", \"narrow\",\n    \"narrowed\", \"natural\", \"nature\", \"naught\",\n    \"near\", \"nearby\", \"nearest\", \"neck\",\n    \"ned\", \"need\", \"needed\", \"needle\",\n    \"needles\", \"needs\", \"neither\", \"nephew\",\n    \"nervous\", \"nervously\", \"nest\", \"nestor\",\n    \"net\", \"never\", \"new\", \"news\",\n    \"next\", \"nice\", \"niece\", \"night\",\n    \"nightfort\", \"nights\", \"nimble\", \"nine\",\n    \"ninety\", \"nipple\", \"nipples\", \"noble\",\n    \"nod\", \"nodded\", \"noise\", \"noisily\",\n    \"none\", \"nor\", \"norrey\", \"north\",\n    \"northern\", \"northman\", \"northmen\", \"nose\",\n    \"nostrils\", \"note\", \"noted\", \"nothing\",\n    \"notice\", \"noticed\", \"notion\", \"nowhere\",\n    \"noye\", \"number\", \"numbers\", \"nuncle\",\n    \"nurse\", \"nute\", \"nym\", \"nymeria\",\n    \"oaf\", \"oak\", \"oaken\", \"oakheart\",\n    \"oars\", \"oarsman\", \"oarsmen\", \"oath\",\n    \"oaths\", \"obara\", \"oberyn\", \"obey\",\n    \"objected\", \"observed\", \"odd\", \"off\",\n    \"offer\", \"offered\", \"offering\", \"office\",\n    \"officers\", \"oft\", \"often\", \"oil\",\n    \"oiled\", \"old\", \"older\", \"oldest\",\n    \"oldtown\", \"olenna\", \"once\", \"ones\",\n    \"onion\", \"onions\", \"onto\", \"onyx\",\n    \"open\", \"opened\", \"opening\", \"orange\",\n    \"order\", \"ordered\", \"orders\", \"ornate\",\n    \"orphan\", \"orton\", \"osfryd\", \"osha\",\n    \"osmund\", \"osney\", \"othell\", \"other\",\n    \"others\", \"otherwise\", \"ought\", \"our\",\n    \"ours\", \"outer\", \"outlaw\", \"outlaws\",\n    \"outriders\", \"outside\", \"overhead\", \"owe\",\n    \"owen\", \"own\", \"owned\", \"pace\",\n    \"paced\", \"pack\", \"packed\", \"padded\",\n    \"page\", \"pages\", \"paid\", \"pail\",\n    \"pain\", \"paint\", \"painted\", \"pair\",\n    \"palace\", \"pale\", \"palfrey\", \"palm\",\n    \"paper\", \"papers\", \"parchment\", \"pardon\",\n    \"pardons\", \"part\", \"parted\", \"parts\",\n    \"party\", \"pass\", \"passage\", \"passed\",\n    \"passing\", \"past\", \"patches\", \"patchface\",\n    \"pate\", \"path\", \"patience\", \"patient\",\n    \"patrek\", \"paul\", \"paused\", \"pavilion\",\n    \"paxter\", \"pay\", \"paying\", \"payne\",\n    \"pays\", \"peace\", \"peaceful\", \"peach\",\n    \"pearls\", \"peck\", \"peeled\", \"peered\",\n    \"peering\", \"penny\", \"penrose\", \"pentos\",\n    \"people\", \"pepper\", \"perchance\", \"perched\",\n    \"perfect\", \"perhaps\", \"perished\", \"permit\",\n    \"permitted\", \"person\", \"pet\", \"petyr\",\n    \"pia\", \"pick\", \"picked\", \"picking\",\n    \"pie\", \"piece\", \"pieces\", \"pies\",\n    \"pig\", \"pigeon\", \"pigs\", \"pile\",\n    \"piled\", \"pillars\", \"pillow\", \"pinched\",\n    \"pine\", \"pines\", \"pink\", \"pinned\",\n    \"pious\", \"piper\", \"pirate\", \"pirates\",\n    \"piss\", \"pit\", \"pitch\", \"pits\",\n    \"pity\", \"place\", \"placed\", \"places\",\n    \"plain\", \"plainly\", \"plan\", \"plank\",\n    \"planned\", \"plans\", \"plant\", \"planted\",\n    \"plate\", \"platter\", \"play\", \"played\",\n    \"playing\", \"plaza\", \"pleaded\", \"pleasant\",\n    \"please\", \"pleased\", \"pleasure\", \"pledge\",\n    \"pledged\", \"plucked\", \"plumm\", \"plump\",\n    \"plunder\", \"plunged\", \"pod\", \"podrick\",\n    \"point\", \"pointed\", \"pointing\", \"points\",\n    \"poison\", \"poisoned\", \"poked\", \"pole\",\n    \"poles\", \"polished\", \"politely\", \"polliver\",\n    \"pommel\", \"pool\", \"poole\", \"pools\",\n    \"poor\", \"poppy\", \"pork\", \"porridge\",\n    \"port\", \"possible\", \"posted\", \"postern\",\n    \"pot\", \"pots\", \"pounding\", \"pour\",\n    \"poured\", \"pouring\", \"power\", \"powerful\",\n    \"pox\", \"practice\", \"praise\", \"pray\",\n    \"prayed\", \"prayer\", \"prayers\", \"praying\",\n    \"precious\", \"pree\", \"prefer\", \"preferred\",\n    \"prepared\", \"presence\", \"present\", \"presented\",\n    \"press\", \"pressed\", \"pressing\", \"presume\",\n    \"pretend\", \"pretty\", \"prey\", \"price\",\n    \"pride\", \"priest\", \"priestess\", \"priests\",\n    \"prince\", \"princes\", \"princess\", \"prisoner\",\n    \"prisoners\", \"private\", \"privy\", \"prize\",\n    \"probably\", \"promise\", \"promised\", \"promises\",\n    \"proof\", \"proper\", \"prophecy\", \"prospect\",\n    \"protect\", \"protected\", \"protector\", \"protested\",\n    \"proud\", \"prove\", \"proved\", \"provided\",\n    \"prow\", \"pull\", \"pulled\", \"pulling\",\n    \"punched\", \"pup\", \"pure\", \"purple\",\n    \"purpose\", \"purse\", \"push\", \"pushed\",\n    \"pushing\", \"put\", \"putting\", \"pyat\",\n    \"pycelle\", \"pyke\", \"pylos\", \"pyp\",\n    \"pyramid\", \"pyramids\", \"pyre\", \"qarl\",\n    \"qarth\", \"qartheen\", \"qhorin\", \"qotho\",\n    \"quarrel\", \"quarrels\", \"quarter\", \"quarters\",\n    \"queen\", \"queens\", \"queer\", \"quentyn\",\n    \"question\", \"questions\", \"quick\", \"quicker\",\n    \"quickly\", \"quiet\", \"quietly\", \"quill\",\n    \"quite\", \"quiver\", \"qyburn\", \"rabbit\",\n    \"raced\", \"racing\", \"radiance\", \"raff\",\n    \"rage\", \"ragged\", \"rags\", \"raiders\",\n    \"rail\", \"rain\", \"rainbow\", \"rains\",\n    \"raise\", \"raised\", \"raising\", \"rakharo\",\n    \"ralf\", \"ram\", \"ramparts\", \"ramsay\",\n    \"ran\", \"randyll\", \"rang\", \"ranger\",\n    \"rangers\", \"ranging\", \"rank\", \"ranks\",\n    \"ransom\", \"rare\",\n    \"rat\", \"rather\", \"rats\", \"rattle\",\n    \"rattled\", \"rattling\", \"raven\", \"ravens\",\n    \"raw\", \"rayder\", \"raymun\", \"razor\",\n    \"reach\", \"reached\", \"reaching\", \"read\",\n    \"reading\", \"ready\", \"real\", \"realize\",\n    \"realized\", \"really\", \"realm\", \"rear\",\n    \"reared\", \"reason\", \"reasons\", \"rebellion\",\n    \"recall\", \"recalled\", \"received\", \"red\",\n    \"reddened\", \"redfort\", \"redwyne\", \"reed\",\n    \"reeds\", \"reek\", \"reflected\", \"refuge\",\n    \"refuse\", \"refused\", \"regarded\", \"regent\",\n    \"reign\", \"reined\", \"reins\", \"release\",\n    \"relief\", \"relieved\", \"remain\", \"remained\",\n    \"remains\", \"remember\", \"remind\", \"reminded\",\n    \"remnants\", \"remove\", \"removed\", \"renly\",\n    \"repeated\", \"replaced\", \"replied\", \"reply\",\n    \"report\", \"reported\", \"reports\", \"require\",\n    \"required\", \"requires\", \"rescue\", \"respect\",\n    \"rest\", \"rested\", \"restless\", \"restore\",\n    \"resumed\", \"return\", \"returned\", \"returning\",\n    \"returns\", \"reward\", \"reznak\", \"rhaegal\",\n    \"rhaegar\", \"rhaenys\", \"rhoyne\", \"ribs\",\n    \"rich\", \"rickard\", \"rickon\", \"rid\",\n    \"ridden\", \"ride\", \"rider\", \"riders\",\n    \"rides\", \"ridge\", \"riding\", \"right\",\n    \"rightful\", \"rights\", \"ring\", \"ringing\",\n    \"ringmail\", \"rings\", \"rip\", \"ripe\",\n    \"ripped\", \"ripping\", \"rippling\", \"rise\",\n    \"rising\", \"risk\", \"river\", \"riverrun\",\n    \"rivers\", \"road\", \"roads\", \"roar\",\n    \"roared\", \"roaring\", \"roast\", \"roasted\",\n    \"robar\", \"robb\", \"robe\", \"robert\",\n    \"robes\", \"robett\", \"robin\", \"rock\",\n    \"rocks\", \"rode\", \"rodrik\", \"roll\",\n    \"rolled\", \"rolling\", \"ronnet\", \"roof\",\n    \"roofs\", \"rookery\", \"room\", \"rooms\",\n    \"roose\", \"root\", \"roots\", \"rope\",\n    \"ropes\", \"rorge\", \"rosby\", \"rose\",\n    \"roses\", \"roslin\", \"rot\", \"rotted\",\n    \"rotten\", \"rotting\", \"rough\", \"roughspun\",\n    \"round\", \"rounded\", \"row\", \"rowan\",\n    \"rows\", \"royal\", \"royce\", \"rubbed\",\n    \"rubies\", \"ruby\", \"ruddy\", \"ruin\",\n    \"ruined\", \"ruins\", \"rule\", \"ruled\",\n    \"rules\", \"run\", \"running\", \"runs\",\n    \"rush\", \"rushed\", \"rushes\", \"rushing\",\n    \"rust\", \"rusted\", \"rustling\", \"ryman\",\n    \"ryswell\", \"saan\", \"sack\", \"sacred\",\n    \"sacrifice\", \"sad\", \"saddle\", \"sadly\",\n    \"safe\", \"safely\", \"safer\", \"safety\",\n    \"sail\", \"sailed\", \"sailing\", \"sailor\",\n    \"sailors\", \"sails\", \"sake\", \"salladhor\",\n    \"salt\", \"saltpans\", \"salty\", \"sam\",\n    \"same\", \"samwell\", \"sand\", \"sandals\",\n    \"sandor\", \"sands\", \"sang\", \"sank\",\n    \"sansa\", \"sat\", \"satin\", \"sausage\",\n    \"savage\", \"savages\", \"save\", \"saved\",\n    \"saw\", \"say\", \"saying\", \"says\",\n    \"scabbard\", \"scales\", \"scar\", \"scarce\",\n    \"scarcely\", \"scared\", \"scarlet\", \"scarred\",\n    \"scars\", \"scattered\", \"scent\", \"scorched\",\n    \"score\", \"scouts\", \"scowled\", \"scrambled\",\n    \"scrape\", \"scraped\", \"scratched\", \"scrawny\",\n    \"scream\", \"screamed\", \"screaming\", \"screams\",\n    \"scrolls\", \"scrubbed\", \"sea\", \"seagard\",\n    \"seal\", \"sealed\", \"seals\", \"search\",\n    \"searched\", \"searching\", \"seas\", \"seasoned\",\n    \"seastone\", \"seat\", \"seated\", \"seaworth\",\n    \"second\", \"secret\", \"secrets\", \"seed\",\n    \"seeing\", \"seek\", \"seem\", \"seemed\",\n    \"seems\", \"seen\", \"sees\", \"seize\",\n    \"seized\", \"seldom\", \"sell\", \"selling\",\n    \"sellsword\", \"selmy\", \"selyse\", \"send\",\n    \"sending\", \"sends\", \"seneschal\", \"sense\",\n    \"sent\", \"sentinels\", \"sentries\", \"sept\",\n    \"septa\", \"septon\", \"septons\", \"ser\",\n    \"serjeant\", \"servant\", \"servants\", \"serve\",\n    \"served\", \"serves\", \"service\", \"serving\",\n    \"set\", \"setting\", \"settle\", \"settled\",\n    \"seven\", \"seventeen\", \"seventy\", \"several\",\n    \"sewn\", \"shade\", \"shadow\", \"shadowcat\",\n    \"shadows\", \"shae\", \"shaft\", \"shafts\",\n    \"shagga\", \"shaggy\", \"shaggydog\", \"shagwell\",\n    \"shake\", \"shaking\", \"shall\", \"shallow\",\n    \"shame\", \"shamed\", \"shape\", \"shaped\",\n    \"shapes\", \"share\", \"shared\", \"sharp\",\n    \"sharpened\", \"sharply\", \"shattered\", \"shaved\",\n    \"shavepate\", \"sheath\", \"sheathed\", \"shed\",\n    \"sheep\", \"sheet\", \"shell\", \"shelter\",\n    \"shield\", \"shields\", \"shift\", \"shifted\",\n    \"shifting\", \"shimmered\", \"shining\", \"shiny\",\n    \"ship\", \"ships\", \"shireen\", \"shirt\",\n    \"shiver\", \"shivered\", \"shivering\",\n    \"shock\", \"shocked\", \"shone\", \"shook\",\n    \"shops\", \"shore\", \"shores\", \"short\",\n    \"shorter\", \"shot\", \"should\", \"shoulder\",\n    \"shoulders\", \"shouldn\", \"shout\", \"shouted\",\n    \"shouting\", \"shouts\", \"shove\", \"shoved\",\n    \"shoving\", \"show\", \"showed\", \"showing\",\n    \"shown\", \"shriek\", \"shrieked\", \"shrieking\",\n    \"shrug\", \"shrugged\", \"shuddered\", \"shuffled\",\n    \"shut\", \"shutters\", \"shy\", \"siblings\",\n    \"sick\", \"sickly\", \"side\", \"sides\",\n    \"sideways\", \"siege\", \"sighed\", \"sight\",\n    \"sigil\", \"sign\", \"signed\", \"signs\",\n    \"silence\", \"silent\", \"silently\", \"silk\",\n    \"silken\", \"silks\", \"silly\", \"silver\",\n    \"silvery\", \"simple\", \"simply\", \"sin\",\n    \"since\", \"sing\", \"singer\", \"singers\",\n    \"singing\", \"single\", \"sins\", \"sip\",\n    \"sipped\", \"sire\", \"sister\", \"sisters\",\n    \"sit\", \"sits\", \"sitting\", \"six\",\n    \"sixteen\", \"sixty\", \"size\", \"skahaz\",\n    \"skill\", \"skin\", \"skinned\", \"skinny\",\n    \"skins\", \"skirling\", \"skirts\", \"skull\",\n    \"skulls\", \"sky\", \"slain\", \"slammed\",\n    \"slap\", \"slapped\", \"slash\", \"slashed\",\n    \"slashing\", \"slate\", \"slaughter\", \"slave\",\n    \"slaver\", \"slavers\", \"slaves\", \"slay\",\n    \"slayer\", \"sleep\", \"sleeping\", \"sleeve\",\n    \"sleeves\", \"slender\", \"slept\", \"slew\",\n    \"slice\", \"slick\", \"slid\", \"sliding\",\n    \"slight\", \"slim\", \"slip\", \"slipped\",\n    \"slipping\", \"slit\", \"slope\", \"slow\",\n    \"slowly\", \"slung\", \"sly\", \"slynt\",\n    \"small\", \"smaller\", \"smallfolk\", \"smallwood\",\n    \"smash\", \"smashed\", \"smell\", \"smelled\",\n    \"smelling\", \"smells\", \"smile\", \"smiled\",\n    \"smiles\", \"smiling\", \"smith\", \"smoke\",\n    \"smoking\", \"smooth\", \"smuggler\", \"snake\",\n    \"snakes\", \"snapped\", \"snapping\", \"snarling\",\n    \"snatched\", \"sniffed\", \"sniffing\", \"snorted\",\n    \"snow\", \"snows\", \"snowy\", \"soaked\",\n    \"sobbed\", \"sobbing\", \"sodden\", \"soft\",\n    \"softly\", \"soil\", \"soiled\", \"solar\",\n    \"sold\", \"soldier\", \"soldiers\", \"solemn\",\n    \"solemnly\", \"solid\", \"somehow\", \"someone\",\n    \"something\", \"sometimes\", \"somewhat\", \"somewhere\",\n    \"son\", \"song\", \"songs\", \"sons\",\n    \"soon\", \"sooner\", \"sorcery\", \"sore\",\n    \"sorry\", \"sort\", \"sorts\", \"sought\",\n    \"soul\", \"sound\", \"sounded\", \"sounds\",\n    \"soup\", \"sour\", \"south\", \"southron\",\n    \"sow\", \"spare\", \"spared\", \"sparrow\",\n    \"sparrows\", \"spat\", \"speak\", \"speaking\",\n    \"speaks\", \"spear\", \"spearmen\", \"spears\",\n    \"special\", \"speech\", \"speed\", \"spells\",\n    \"spend\", \"spent\", \"spices\", \"spider\",\n    \"spied\", \"spike\", \"spiked\", \"spikes\",\n    \"spilled\", \"spilling\", \"spinning\", \"spirits\",\n    \"spit\", \"splash\", \"splashed\", \"splashing\",\n    \"splendid\", \"splinters\", \"split\", \"spoke\",\n    \"spoken\", \"spoon\", \"spot\", \"spotted\",\n    \"sprawled\", \"spray\", \"spread\", \"spreading\",\n    \"spring\", \"sprouted\", \"spun\", \"spurred\",\n    \"square\", \"squat\", \"squeeze\", \"squeezed\",\n    \"squinted\", \"squire\", \"squires\", \"squirmed\",\n    \"squirrel\", \"stab\", \"stabbed\", \"stable\",\n    \"stableboy\", \"stables\", \"staff\", \"stafford\",\n    \"stag\", \"staggered\", \"stained\", \"stair\",\n    \"stairs\", \"stakes\", \"stale\", \"stalked\",\n    \"stallion\", \"stand\", \"standard\", \"standing\",\n    \"stands\", \"stank\", \"stannis\", \"star\",\n    \"stare\", \"stared\", \"staring\", \"stark\",\n    \"starks\", \"stars\", \"start\", \"started\",\n    \"starting\", \"startled\", \"starve\", \"starved\",\n    \"starving\", \"statue\", \"stay\", \"stayed\",\n    \"steady\", \"steal\", \"stealing\", \"steam\",\n    \"steaming\", \"steel\", \"steep\", \"steffon\",\n    \"stench\", \"step\", \"stepped\", \"steps\",\n    \"stern\", \"stevron\", \"stew\", \"steward\",\n    \"stewards\", \"stick\", \"stiff\", \"stiffly\",\n    \"still\", \"stink\", \"stinking\", \"stir\",\n    \"stirred\", \"stirring\", \"stole\", \"stolen\",\n    \"stomach\", \"stone\", \"stones\", \"stony\",\n    \"stood\", \"stool\", \"stop\", \"stopped\",\n    \"stories\", \"storm\", \"storms\", \"story\",\n    \"stout\", \"straight\", \"strand\", \"strange\",\n    \"strangely\", \"stranger\", \"strangers\", \"strapped\",\n    \"straw\", \"stream\", \"streamed\", \"streaming\",\n    \"streams\", \"street\", \"streets\", \"strength\",\n    \"stretch\", \"stretched\", \"strewn\", \"strike\",\n    \"string\", \"strings\", \"strip\", \"striped\",\n    \"stripped\", \"strode\", \"stroke\", \"stroked\",\n    \"strong\", \"stronger\", \"struck\", \"struggle\",\n    \"struggled\", \"stubborn\", \"stuck\", \"studded\",\n    \"studied\", \"stuff\", \"stuffed\", \"stumbled\",\n    \"stumbling\", \"stump\", \"stunted\", \"stupid\",\n    \"styr\", \"subject\", \"such\", \"suck\",\n    \"sucked\", \"sucking\", \"sudden\", \"suddenly\",\n    \"suffer\", \"suffered\", \"suffice\", \"suggest\",\n    \"suggested\", \"suit\", \"suited\", \"sullen\",\n    \"summer\", \"summon\", \"summoned\", \"sun\",\n    \"sunk\", \"sunlight\", \"sunset\", \"sunspear\",\n    \"supper\", \"support\", \"suppose\", \"supposed\",\n    \"surcoat\", \"sure\", \"surely\", \"surface\",\n    \"surprise\", \"surprised\", \"survive\", \"survived\",\n    \"survivors\", \"suspected\", \"suspicion\", \"swallow\",\n    \"swallowed\", \"swam\", \"swann\", \"sway\",\n    \"swayed\", \"swaying\", \"swear\", \"swears\",\n    \"sweat\", \"sweet\", \"sweeter\", \"sweetling\",\n    \"sweets\", \"swept\", \"swift\", \"swiftly\",\n    \"swim\", \"swing\", \"swinging\", \"swirled\",\n    \"swirling\", \"swollen\", \"sword\", \"swordbelt\",\n    \"swords\", \"swore\", \"sworn\", \"swung\",\n    \"swyft\", \"symon\", \"syrio\", \"table\",\n    \"tables\", \"taena\", \"tail\", \"take\",\n    \"taken\", \"takes\", \"taking\", \"tale\",\n    \"tales\", \"talk\", \"talked\", \"talking\",\n    \"tall\", \"taller\", \"tallhart\", \"tanda\",\n    \"tangle\", \"tangled\", \"tankard\", \"targaryen\",\n    \"tarly\", \"tarth\", \"task\", \"taste\",\n    \"tasted\", \"tattered\", \"taught\", \"teach\",\n    \"tear\", \"tearing\", \"tears\", \"teats\",\n    \"teeth\", \"tell\", \"telling\", \"tells\",\n    \"temper\", \"temple\", \"temples\", \"ten\",\n    \"tend\", \"tender\", \"tent\", \"tents\",\n    \"terms\", \"terrace\", \"terrible\", \"terrified\",\n    \"terror\", \"terrors\", \"than\", \"thank\",\n    \"thanked\", \"thanks\", \"theirs\", \"thenn\",\n    \"thenns\", \"theon\", \"these\", \"thick\",\n    \"thicker\", \"thief\", \"thieves\", \"thigh\",\n    \"thighs\", \"thin\", \"thing\", \"things\",\n    \"thinking\", \"thinks\", \"third\", \"thirst\",\n    \"thirteen\", \"thirty\", \"thoren\", \"thorne\",\n    \"thorns\", \"thoros\", \"those\", \"though\",\n    \"thought\", \"thoughts\", \"thousand\", \"thousands\",\n    \"thread\", \"threat\", \"threaten\", \"threats\",\n    \"three\", \"threw\", \"thrice\", \"throat\",\n    \"throats\", \"throbbing\", \"throne\", \"thrones\",\n    \"through\", \"throw\", \"throwing\", \"thrown\",\n    \"thrust\", \"thumb\", \"thunder\", \"tickler\",\n    \"tide\", \"tidings\", \"tied\", \"tight\",\n    \"tightened\", \"tightly\", \"till\", \"times\",\n    \"timett\", \"tiny\", \"tired\", \"titan\",\n    \"toad\", \"today\", \"toe\", \"toes\",\n    \"together\", \"tokar\", \"token\", \"told\",\n    \"tollett\", \"tom\", \"tommen\", \"tone\",\n    \"tongue\", \"tongues\", \"tonight\", \"too\",\n    \"took\", \"tooth\", \"top\", \"torch\",\n    \"torches\", \"tore\", \"tormund\", \"torn\",\n    \"torrhen\", \"tossed\", \"touch\", \"touched\",\n    \"touching\", \"tourney\", \"toward\", \"tower\",\n    \"towering\", \"towers\", \"town\", \"towns\",\n    \"trade\", \"trader\", \"trading\", \"trail\",\n    \"trailed\", \"train\", \"trained\", \"training\",\n    \"traitor\", \"traitors\", \"trant\", \"trap\",\n    \"trapped\", \"travel\", \"treachery\", \"treason\",\n    \"treasures\", \"treat\", \"treated\", \"tree\",\n    \"trees\", \"trembled\", \"trembling\", \"trial\",\n    \"trick\", \"trident\", \"tried\", \"trimmed\",\n    \"tris\", \"trotted\", \"trouble\", \"troubled\",\n    \"trout\", \"true\", \"trueborn\", \"truly\",\n    \"trumpets\", \"trunk\", \"trust\", \"trusted\",\n    \"truth\", \"try\", \"trying\", \"trystane\",\n    \"tub\", \"tucked\", \"tugged\", \"tully\",\n    \"tullys\", \"tumbled\", \"tunic\", \"tunnel\",\n    \"tunnels\", \"turn\", \"turncloak\", \"turned\",\n    \"turning\", \"turnips\", \"turns\", \"turtle\",\n    \"tutor\", \"twelve\", \"twenty\", \"twice\",\n    \"twin\", \"twins\", \"twist\", \"twisted\",\n    \"twisting\", \"twitched\", \"tyene\", \"tyrell\",\n    \"tyrells\", \"tyrion\", \"tyrosh\", \"tyroshi\",\n    \"tysha\", \"tytos\", \"tywin\", \"ugly\",\n    \"umber\", \"unawares\", \"uncertain\", \"uncle\",\n    \"uncles\", \"under\", \"underfoot\", \"undying\",\n    \"uneasy\", \"unella\", \"unless\", \"unlike\",\n    \"unseen\", \"unsullied\", \"until\", \"upon\",\n    \"upper\", \"upward\", \"urged\", \"urswyck\",\n    \"use\", \"used\", \"useful\", \"useless\",\n    \"using\", \"usual\", \"usurper\", \"utterly\",\n    \"vaes\", \"vain\", \"val\", \"valar\",\n    \"vale\", \"valiant\", \"valley\", \"valor\",\n    \"valyria\", \"valyrian\", \"van\", \"vance\",\n    \"vanished\", \"varamyr\", \"vardis\", \"vargo\",\n    \"varys\", \"vast\", \"vault\", \"vaulted\",\n    \"vaults\", \"veil\", \"veins\", \"velvet\",\n    \"vengeance\", \"vest\", \"victarion\", \"victory\",\n    \"view\", \"vile\", \"village\", \"villages\",\n    \"violently\", \"viper\", \"viserion\", \"viserys\",\n    \"visible\", \"vision\", \"visit\", \"visited\",\n    \"visitors\", \"visor\", \"voice\", \"voices\",\n    \"volantene\", \"volantis\", \"vow\", \"vowed\",\n    \"vows\", \"voyage\", \"vyman\", \"waddled\",\n    \"wager\", \"wagon\", \"wagons\", \"waif\",\n    \"wailing\", \"waist\", \"wait\", \"waited\",\n    \"waiting\", \"wake\", \"waking\", \"walda\",\n    \"walder\", \"walders\", \"walk\", \"walked\",\n    \"walking\", \"wall\", \"walls\", \"walton\",\n    \"wandered\", \"wandering\", \"want\", \"wanted\",\n    \"wanting\", \"wants\", \"war\", \"ward\",\n    \"warden\", \"warg\", \"warhammer\", \"warhorn\",\n    \"warhorns\", \"warily\", \"warlocks\", \"warm\",\n    \"warmer\", \"warmth\", \"warn\", \"warned\",\n    \"warning\", \"warrior\", \"warriors\", \"wars\",\n    \"warships\", \"wary\", \"wash\", \"washed\",\n    \"washing\", \"wasn\", \"waste\", \"wasted\",\n    \"watch\", \"watched\", \"watching\", \"water\",\n    \"watered\", \"waters\", \"watery\", \"wave\",\n    \"waved\", \"waves\", \"waving\", \"wax\",\n    \"way\", \"waymar\", \"wayn\", \"wayns\",\n    \"waynwood\", \"ways\", \"weak\", \"weakness\",\n    \"wealth\", \"weapon\", \"weapons\", \"wear\",\n    \"wearing\", \"wears\", \"weary\", \"weasel\",\n    \"wed\", \"wedding\", \"weeds\", \"weep\",\n    \"weeper\", \"weeping\", \"weese\", \"weight\",\n    \"weirwood\", \"weirwoods\", \"welcome\", \"welcomed\",\n    \"wench\", \"wendel\", \"went\", \"wept\",\n    \"weren\", \"west\", \"western\", \"westeros\",\n    \"westerosi\", \"wet\", \"wex\", \"whatever\",\n    \"wheel\", \"wheeled\", \"wheels\", \"whenever\",\n    \"whent\", \"where\", \"wherever\", \"whether\",\n    \"while\", \"whilst\", \"whip\", \"whipped\",\n    \"whirled\", \"whiskers\", \"whisper\", \"whispered\",\n    \"whispers\", \"whistled\", \"white\", \"whoever\",\n    \"whole\", \"whom\", \"whore\", \"whores\",\n    \"whose\", \"why\", \"wicked\", \"wide\",\n    \"widow\", \"wife\", \"wight\", \"wights\",\n    \"wild\", \"wildfire\", \"wildling\", \"wildlings\",\n    \"wildly\", \"willas\", \"willem\", \"willing\",\n    \"willow\", \"win\", \"winch\", \"wind\",\n    \"windblown\", \"winding\", \"window\", \"windows\",\n    \"winds\", \"wine\", \"wing\", \"wings\",\n    \"winning\", \"winter\", \"wiped\", \"wisdom\",\n    \"wise\", \"wiser\", \"wish\", \"wished\",\n    \"wishes\", \"wishing\", \"wisps\", \"wit\",\n    \"witch\", \"withered\", \"within\", \"without\",\n    \"witness\", \"wits\", \"wives\", \"wizard\",\n    \"woke\", \"woken\", \"wolf\", \"wolfswood\",\n    \"wolves\", \"woman\", \"womb\", \"women\",\n    \"won\", \"wonder\", \"wondered\", \"wondering\",\n    \"wood\", \"wooden\", \"woodharp\", \"woods\",\n    \"wool\", \"woolen\", \"word\", \"wordless\",\n    \"words\", \"wore\", \"work\", \"worked\",\n    \"working\", \"world\", \"worm\", \"worms\",\n    \"worn\", \"worse\", \"worship\", \"worst\",\n    \"worth\", \"worthy\", \"wouldn\", \"wound\",\n    \"wounded\", \"wounds\", \"woven\", \"wrapped\",\n    \"wrath\", \"wrenched\", \"wretched\", \"wrinkled\",\n    \"wrist\", \"wrists\", \"write\", \"writing\",\n    \"written\", \"wrong\", \"wrote\", \"wroth\",\n    \"wrought\", \"wun\", \"wyk\", \"wylis\",\n    \"wyman\", \"xaro\", \"xho\", \"xhoan\",\n    \"xhondo\", \"yandry\", \"yanked\", \"yard\",\n    \"yards\", \"yarwyck\", \"year\", \"years\",\n    \"yellow\", \"yes\", \"yesterday\", \"yet\",\n    \"yezzan\", \"ygritte\", \"yield\", \"yielded\",\n    \"yohn\", \"yollo\", \"yoren\", \"young\",\n    \"younger\", \"youngest\", \"yours\", \"yourself\",\n    \"youth\", \"yronwood\", \"ysilla\", \"yunkai\",\n    \"yunkish\"\n]\n\nexport default wordlist;\n","import modals from './modalReducers';\nimport phrases from './phraseReducers';\nimport words from './wordListReducer';\n\nconst reducers = {\n  modals,\n  phrases,\n  words,\n}\n\nexport default reducers;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport './styles/index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from './reducers';\n\nconst store = createStore(\n  combineReducers(rootReducer),\n  composeWithDevTools(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/clippy.c6b23471.svg\";"],"sourceRoot":""}